<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lingnan.wedding.mapper.UploadLogDao">

    <resultMap type="com.lingnan.wedding.core.entity.UploadLog" id="UploadLogMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="imgUrl" column="img_url" jdbcType="VARCHAR"/>
        <result property="roleid" column="roleid" jdbcType="INTEGER"/>
        <result property="operationName" column="operation_name" jdbcType="VARCHAR"/>
        <result property="createUser" column="create_user" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="isDel" column="is_del" jdbcType="INTEGER"/>
        <result property="userName" column="username" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UploadLogMap">
        select
          id, img_url, roleid, operation_name, create_user, create_time,is_del
        from wedding_db.upload_log
        where id = #{id} and is_del = 0
    </select>

    <!--查询单个-->
    <select id="queryAllCount" resultType="java.lang.Integer">
        select
          count(*)
        from wedding_db.upload_log
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UploadLogMap">
        select
          u.id, img_url, u.roleid, r.role, operation_name, create_user, s.username,u.create_time,is_del
        from wedding_db.upload_log u
        left join wedding_db.role r on u.roleid = r.id
        left join wedding_db.sys_user s on s.id = u.create_user
        where u.is_del = 0
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UploadLogMap">
        select
          id, img_url, roleid, operation_name, create_user, create_time,is_del
        from wedding_db.upload_log
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="imgUrl != null and imgUrl != ''">
                and img_url = #{imgUrl}
            </if>
            <if test="roleid != null">
                and roleid = #{roleid}
            </if>
            <if test="operationName != null and operationName != ''">
                and operation_name = #{operationName}
            </if>
            <if test="createUser != null">
                and create_user = #{createUser}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            is_del = 0
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into wedding_db.upload_log(img_url, roleid, operation_name, create_user, create_time)
        values (#{imgUrl}, #{roleid}, #{operationName}, #{createUser}, #{createTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update wedding_db.upload_log
        <set>
            <if test="imgUrl != null and imgUrl != ''">
                img_url = #{imgUrl},
            </if>
            <if test="roleid != null">
                roleid = #{roleid},
            </if>
            <if test="operationName != null and operationName != ''">
                operation_name = #{operationName},
            </if>
            <if test="createUser != null">
                create_user = #{createUser},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <update id="deleteById">
        update wedding_db.upload_log set is_del= 1 where id = #{id}
    </update>

    <update id="clear">
        update wedding_db.upload_log set is_del= 1
    </update>


</mapper>